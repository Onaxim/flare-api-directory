[{"method":"submitPriceHashSubmitter","natSpec":{"return":[],"notice":"Emits PriceHashSubmitted event","param":{"_hash":"Hashed price and random number"}}},{"method":"revealPriceSubmitter","natSpec":{"return":[],"notice":"Emits PriceRevealed event","param":{"_random":"Submitted random number"}}},{"method":"finalizePriceEpoch","natSpec":{"return":[["_eligibleAddresses"," List of addresses eligible for reward"],["_natWeights"," List of native token weights corresponding to the eligible addresses"],["_natWeightsSum"," Sum of weights in _natWeights"]],"notice":"Computes epoch price based on gathered votes","param":{"_returnRewardData":"Parameter that determines if the reward data is returned"}}},{"method":"averageFinalizePriceEpoch","natSpec":{"return":[],"notice":"Forces finalization of price epoch calculating average price from trusted addresses","param":{"_epochId":"Id of the epoch to finalize"},"dec":"Used as a fallback method if epoch finalization is failing"}},{"method":"forceFinalizePriceEpoch","natSpec":{"return":[],"notice":"Forces finalization of price epoch - only called when exception happened","param":{"_epochId":"Id of the epoch to finalize"},"dec":"Used as a fallback method if epoch finalization is failing"}},{"method":"activateFtso","natSpec":{"return":[],"notice":"Initializes ftso immutable settings and activates oracle","param":{"_revealPeriod":"Duration of epoch reveal period in seconds"}}},{"method":"deactivateFtso","natSpec":{"return":[],"notice":"Deactivates oracle"}},{"method":"updateInitialPrice","natSpec":{"return":[]}},{"method":"configureEpochs","natSpec":{"return":[],"notice":"Sets configurable settings related to epochs","param":{"_trustedAddresses":"trusted addresses - use their prices if low nat turnout is not achieved"},"dec":"Should never revert if called from ftso manager"}},{"method":"setVotePowerBlock","natSpec":{"return":[],"notice":"Sets current vote power block","param":{"_votePowerBlock":"Vote power block"}}},{"method":"setAsset","natSpec":{"return":[],"notice":"Sets asset for FTSO to operate as single-asset oracle","param":{"_asset":"Asset"}}},{"method":"setAssetFtsos","natSpec":{"return":[],"notice":"Sets an array of FTSOs for FTSO to operate as multi-asset oracle","param":{"_assetFtsos":"Array of FTSOs"},"dec":"FTSOs implicitly determine the FTSO assets"}},{"method":"initializeCurrentEpochStateForReveal","natSpec":{"return":[],"notice":"Initializes current epoch instance for reveal","param":{"_fallbackMode":"Current epoch in fallback mode"}}},{"method":"getPriceEpochConfiguration","natSpec":{"return":[["_firstEpochStartTime"," First epoch start time"],["_submitPeriod"," Submit period in seconds"],["_revealPeriod"," Reveal period in seconds"]],"notice":"Returns current epoch data"}},{"method":"epochsConfiguration","natSpec":{"return":[],"notice":"Returns current configuration of epoch state"}},{"method":"getAsset","natSpec":{"return":[],"notice":"Returns the FTSO asset","dec":"asset is null in case of multi-asset FTSO"}},{"method":"getAssetFtsos","natSpec":{"return":[],"notice":"Returns the asset FTSOs","dec":"AssetFtsos is not null only in case of multi-asset FTSO"}},{"method":"getCurrentPrice","natSpec":{"return":[["_price"," Price in USD multiplied by ASSET_PRICE_USD_DECIMALS"],["_timestamp"," Time when price was updated for the last time"]],"notice":"Returns current asset price"}},{"method":"getEpochPrice","natSpec":{"return":[["Price"," in USD multiplied by ASSET_PRICE_USD_DECIMALS"]],"notice":"Returns asset price consented in specific epoch","param":{"_epochId":"Id of the epoch"}}},{"method":"getEpochPriceForVoter","natSpec":{"return":[["Price"," in USD multiplied by ASSET_PRICE_USD_DECIMALS"]],"notice":"Returns asset price submitted by voter in specific epoch","param":{"_voter":"Address of the voter"}}},{"method":"getCurrentRandom","natSpec":{"return":[["Random"," number"]],"notice":"Returns current random number","dec":"Should never revert"}},{"method":"getRandom","natSpec":{"return":[["Random"," number"]],"notice":"Returns random number of the specified epoch","param":{"_epochId":"Id of the epoch"}}},{"method":"getPriceEpochData","natSpec":{"return":[["_epochId"," Current epoch id"],["_epochSubmitEndTime"," End time of the current epoch price submission as seconds from unix epoch"],["_epochRevealEndTime"," End time of the current epoch price reveal as seconds from unix epoch"],["_votePowerBlock"," Vote power block for the current epoch"],["_fallbackMode"," Current epoch in fallback mode - only votes from trusted addresses will be used"]],"notice":"Returns current epoch data","dec":"half-closed intervals - end time not included"}},{"method":"getVoteWeightingParameters","natSpec":{"return":[["_assets"," the list of assets that are accounted in vote"],["_assetMultipliers"," weight multiplier of each asset in (multiasset) ftso"],["_totalVotePowerNat"," total native token vote power at block"],["_totalVotePowerAsset"," total combined asset vote power at block"],["_assetWeightRatio"," ratio of combined asset vp vs. native token vp (in BIPS)"],["_votePowerBlock"," vote powewr block for given epoch"]],"notice":"Returns parameters necessary for replicating vote weighting (used in VoterWhitelister)."}},{"method":"wNatVotePowerCached","natSpec":{"return":[],"notice":"Returns wNat vote power for the specified owner and the given epoch id","param":{"_epochId":"Id of the epoch"}}},{"method":"getCurrentEpochId","natSpec":{"return":[],"notice":"Returns current epoch id","dec":"Should never revert"}},{"method":"getEpochId","natSpec":{"return":[],"notice":"Returns id of the epoch which was opened for price submission at the specified timestamp","param":{"_timestamp":"Timestamp as seconds from unix epoch"},"dec":"Should never revert"}},{"method":"_submitPriceHash","natSpec":{"return":[],"notice":"Emits PriceHashSubmitted event","param":{"_hash":"Hashed price and random number"}}},{"method":"_revealPrice","natSpec":{"return":[],"notice":"Emits PriceRevealed event","param":{"_random":"Submitted random number"}}},{"method":"_getAssetData","natSpec":{"return":[["_assets"," List of assets"],["_votePowers"," List of vote powers"],["_prices"," List of asset prices"]],"notice":"Returns the list of assets and its vote powers"}},{"method":"_refreshAssets","natSpec":{"return":[],"notice":"Refreshes epoch state assets if FTSO is in multi-asset mode","dec":"Assets are determined by other single-asset FTSOs on which the asset may change at any time"}},{"method":"_averageFinalizePriceEpoch","natSpec":{"return":[],"notice":"Forces finalization of the epoch calculating average price from trusted addresses","param":{"_exception":"Indicates if the exception happened"},"dec":"Sets the price to be the average of prices from trusted addresses or force finalize if no votes submitted"}},{"method":"_forceFinalizePriceEpoch","natSpec":{"return":[],"notice":"Forces finalization of the epoch","param":{"_exception":"Indicates if the exception happened"},"dec":"Sets the median price to be equal to the price from the previous epoch (if epoch id is 0, price is 0)"}},{"method":"_writeEpochPriceData","natSpec":{"return":[],"notice":"Stores epoch data related to price\nTo be implemented in descendants"}},{"method":"_writeFallbackEpochPriceData","natSpec":{"return":[],"notice":"Stores epoch data related to price (fallback / low turnout / forced mode)\nTo be implemented in descendants"}},{"method":"_getVotePowerOf","natSpec":{"return":[],"notice":"Returns native token and asset vote power for epoch - returns (0, 0) if in fallback mode","param":{"_voterWNatVP":"Voter nat vote power as queried by price submitter"},"dec":"Checks if vote power is sufficient and adjusts vote power if it is too large"}},{"method":"_getVotePowerAt","natSpec":{"return":[],"notice":"Returns vote power of the given token at the specified block","param":{"_vpBlock":"Vote power block"},"dec":"Returns 0 if vote power token is null"}},{"method":"_getVotePowerOfAt","natSpec":{"return":[],"notice":"Returns vote power of the given token at the specified block and for the specified owner","param":{"_vpBlock":"Vote power block"},"dec":"Returns 0 if vote power token is null"}},{"method":"_readVotes","natSpec":{"return":[],"notice":"Extract vote data from epoch","param":{"_epoch":"Epoch instance"}}},{"method":"_readTrustedVotes","natSpec":{"return":[["_priceSum"," Sum of all prices submitted by trusted addresses"],["_count"," Number of prices submitted by trusted addresses"]],"notice":"Extract trusted vote data from epoch","param":{"_trustedAddresses":"List of trusted addresses"}}},{"method":"_readRewardData","natSpec":{"return":[],"notice":"Extracts reward data for epoch","param":{"_weightNat":"Array of native token weights"}}},{"method":"_getEpochForFinalization","natSpec":{"return":[["_epoch"," Return epoch instance"]],"notice":"Get epoch instance for given epoch id and check if it can be finished","param":{"_epochId":"Epoch id"}}},{"method":"_getEpochInstance","natSpec":{"return":[],"notice":"Return epoch instance if epoch id exists in storage, reverts if it is already overwritten","param":{"_epochId":"Epoch id"}}},{"method":"_isAddressEligible","natSpec":{"return":[["_eligible"," Return True if the address should be rewarded"]],"notice":"Checks if an address is eligible for reward (for edge quartile cases)","param":{"_address":"Address that submitted the price"}}}]