[{"method":"activate","natSpec":{"return":[],"notice":"Activates FTSO manager (daemonize() runs jobs)"}},{"method":"daemonize","natSpec":{"return":[],"notice":"Runs task triggered by Daemon.\nThe tasks include the following by priority\n- finalizePriceEpoch     \n- Set governance parameters and initialize epochs\n- finalizeRewardEpoch"}},{"method":"addFtso","natSpec":{"return":[],"notice":"Adds FTSO to the list of rewarded FTSOs\nAll ftsos in multi asset ftso must be managed by this ftso manager"}},{"method":"removeFtso","natSpec":{"return":[],"notice":"Removes FTSO from the list of the rewarded FTSOs - revert if ftso is used in multi asset ftso","dec":"Deactivates _ftso"}},{"method":"replaceFtso","natSpec":{"return":[],"notice":"Replaces one ftso with another - symbols must match\nAll ftsos in multi asset ftso must be managed by this ftso manager","dec":"Deactivates _ftsoToRemove"}},{"method":"setFtsoAsset","natSpec":{"return":[],"notice":"Set asset for FTSO"}},{"method":"setFtsoAssetFtsos","natSpec":{"return":[],"notice":"Set asset FTSOs for FTSO - all ftsos should already be managed by this ftso manager"}},{"method":"setFallbackMode","natSpec":{"return":[],"notice":"Set fallback mode"}},{"method":"setFtsoFallbackMode","natSpec":{"return":[],"notice":"Set fallback mode for ftso"}},{"method":"setGovernanceParameters","natSpec":{"return":[],"notice":"Sets governance parameters for FTSOs"}},{"method":"getCurrentPriceEpochData","natSpec":{"return":[],"dec":"half-closed intervals - end time not included"}},{"method":"getRewardEpochVotePowerBlock","natSpec":{"return":[],"notice":"Gets vote power block of the specified reward epoch","param":{"_rewardEpoch":"Reward epoch sequence number"}}},{"method":"getCurrentRewardEpoch","natSpec":{"return":[],"notice":"Returns current reward epoch index (one currently running)"}},{"method":"_initializeFirstRewardEpoch","natSpec":{"return":[],"notice":"Initializes first reward epoch. Also sets vote power block to FTSOs"}},{"method":"_finalizeRewardEpoch","natSpec":{"return":[],"notice":"Finalizes reward epoch"}},{"method":"_closeExpiredRewardEpochs","natSpec":{"return":[],"notice":"Closes expired reward epochs"}},{"method":"_cleanupOnRewardEpochFinalization","natSpec":{"return":[],"notice":"Performs any cleanup needed immediately after a reward epoch is finalized"}},{"method":"_finalizePriceEpoch","natSpec":{"return":[],"notice":"Finalizes price epoch"}},{"method":"_initializeCurrentEpochFTSOStatesForReveal","natSpec":{"return":[],"notice":"Initializes epoch states in FTSOs for reveal. \nPrior to initialization it sets governance parameters, if \ngovernance has changed them. It also sets price submitter trusted addresses."}},{"method":"_checkAssetFtsosAreManaged","natSpec":{"return":[],"notice":"Check if asset ftsos are managed by this ftso manager, revert otherwise"}},{"method":"_checkMultiAssetFtsosAreManaged","natSpec":{"return":[],"notice":"Check if all multi asset ftsos are managed by this ftso manager, revert otherwise"}},{"method":"_getPriceEpochRevealEndTime","natSpec":{"return":[],"notice":"Returns price epoch reveal end time.","param":{"_priceEpochId":"The price epoch id."},"dec":"half-closed interval - end time not included"}},{"method":"_getPriceEpochEndTime","natSpec":{"return":[],"notice":"Returns price epoch end time.","param":{"_forPriceEpochId":"The price epoch id of the end time to fetch."},"dec":"half-closed interval - end time not included"}},{"method":"_getCurrentPriceEpochId","natSpec":{"return":[],"notice":"Returns current price epoch id. The calculation in this function\nshould fully match to definition of current epoch id in FTSO contracts."}}]