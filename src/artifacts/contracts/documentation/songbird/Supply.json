[{"method":"updateAuthorizedInflationAndCirculatingSupply","natSpec":{"return":[],"notice":"Updates authorized inflation and circulating supply - emits event if error","param":{"_inflationAuthorizedWei":"Authorized inflation"},"dec":"Also updates the burn address amount"}},{"method":"setInflation","natSpec":{"return":[],"notice":"Sets inflation contract. Only governance can call this method."}},{"method":"addTokenPool","natSpec":{"return":[],"notice":"Adds token pool so it can call updateTokenPoolDistributedAmount method when \n   some tokens are distributed","param":{"_decreaseFoundationSupplyByAmountWei":"If token pool was given initial supply from fundation supply, \n   decrease it's value by this amount"}}},{"method":"decreaseFoundationSupply","natSpec":{"return":[],"notice":"Decrease foundation supply when foundation funds are released to a token pool or team members","param":{"_amountWei":"Amount to decrease by"}}},{"method":"changeBurnAddress","natSpec":{"return":[],"notice":"Change burn address","param":{"_burnAddress":"New burn address"},"dec":"Updates burn value for current address, changes to new address and updates again"}},{"method":"getCirculatingSupplyAtCached","natSpec":{"return":[["_circulatingSupplyWei"," Return approximate circulating supply for last known block <= _blockNumber"]],"notice":"Get approximate circulating supply for given block number from cache - only past block","param":{"_blockNumber":"Block number"}}},{"method":"getCirculatingSupplyAt","natSpec":{"return":[["_circulatingSupplyWei"," Return approximate circulating supply for last known block <= _blockNumber"]],"notice":"Get approximate circulating supply for given block number","param":{"_blockNumber":"Block number"}}},{"method":"getInflatableBalance","natSpec":{"return":[["_inflatableBalanceWei"," Return inflatable balance"]],"notice":"Get total inflatable balance (initial genesis amount + total authorized inflation)"}}]