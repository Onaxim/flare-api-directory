[{"method":"setAddressUpdater","natSpec":{"return":[],"notice":"Sets the address udpater contract.","param":{"_addressUpdater":"The address updater contract."}}},{"method":"setTrustedAddresses","natSpec":{"return":[]}},{"method":"voterWhitelisted","natSpec":{"return":[]}},{"method":"votersRemovedFromWhitelist","natSpec":{"return":[]}},{"method":"submitHash","natSpec":{"return":[],"notice":"Emits HashSubmitted event","param":{"_hash":"Hash of ftso indices, prices, random number and voter address"}}},{"method":"revealPrices","natSpec":{"return":[],"notice":"Emits PricesRevealed event","param":{"_random":"Submitted random number"}}},{"method":"getCurrentRandom","natSpec":{"return":[["Random"," number"]],"notice":"Returns current random number","dec":"Should never revert"}},{"method":"getRandom","natSpec":{"return":[["Random"," number"]],"notice":"Returns random number of the specified epoch","param":{"_epochId":"Id of the epoch"}}},{"method":"voterWhitelistBitmap","natSpec":{"return":[]}},{"method":"_updateContractAddresses","natSpec":{"return":[],"notice":"Implementation of the AddressUpdatable abstract method.","dec":"If replacing the registry or the whitelist and the old one is not empty, make sure to replicate the state,\notherwise internal whitelist bitmaps won't match."}}]